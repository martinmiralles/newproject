{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","async","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","initalState","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","projectTask_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","created_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a71a5e19.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\n//STEP 4: must create actions that contain the API calls\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    //if an invalid URL is manually typed, send user back to the dashboard\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (window.confirm(\"Are you sure you want to delete this project?\")) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//STEP1: after creating a type above, you create a reducer in the 'reducers' folder\r\n\r\n//For SECTION 5: Adding Project Tasks\r\n//Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n//Types for SECURITY ACTIONS\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='card card-body bg-light mb-3'>\r\n          <div className='row'>\r\n            <div className='col-2'>\r\n              <span className='mx-auto'>{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className='col-lg-6 col-md-4 col-8'>\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className='col-md-4 d-none d-lg-block'>\r\n              <ul className='list-group'>\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className='list-group-item board'>\r\n                    <i className='fa fa-flag-checkered pr-1'> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className='list-group-item update'>\r\n                    <i className='fa fa-edit pr-1'> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className='list-group-item delete'\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className='fa fa-minus-circle pr-1'> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//A React Functional Component, via the shortcut 'rfc'\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to='/addProject' className='btn btn-lg btn-info'>\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//A className-based component, via the shortcut 'rcc'\r\n//All information here will be send to 'App.js', then send to 'index.js'\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      //JSX rule: can only return 1 parent div.  The code below wouldn't work without the div below this line\r\n\r\n      //Dashboard Component (Project Item included) -->\r\n      <div className='projects'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-md-12'>\r\n              <h1 className='display-4 text-center'>Projects</h1>\r\n              <br />\r\n              <CreateProjectButton></CreateProjectButton>\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      //End of Dashboard Component\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    //POST => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n\r\n    //Extract token from the res.data; When response is successful, we are given that long token string\r\n    const { token } = res.data;\r\n\r\n    //Store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n\r\n    //Set our token in the header, like we do in Postman\r\n    setJWTToken(token);\r\n\r\n    //Decode the long token on React\r\n    const decoded = jwt_decode(token);\r\n\r\n    //Dispatch to our security Reducers\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className='collapse navbar-collapse' id='mobile-nav'>\r\n        <ul className='navbar-nav mr-auto'>\r\n          <li className='nav-item'>\r\n            <Link className='nav-link' to='/dashboard'>\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className='navbar-nav ml-auto'>\r\n          <li className='nav-item'>\r\n            <Link to='/dashboard' className='nav-link'>\r\n              <i className='fas fa-user-circle mr-1'></i>\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <Link\r\n              className='nav-link'\r\n              to='/logout'\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className='collapse navbar-collapse' id='mobile-nav'>\r\n        <ul className='navbar-nav ml-auto'>\r\n          <li className='nav-item'>\r\n            <Link className='nav-link' to='/register'>\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link className='nav-link' to='/login'>\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      //NavBar Component Code\r\n      <nav className='navbar navbar-expand-sm navbar-dark bg-primary mb-4'>\r\n        <div className='container'>\r\n          <Link className='navbar-brand' to='/'>\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className='navbar-toggler'\r\n            type='button'\r\n            data-toggle='collapse'\r\n            data-target='#mobile-nav'\r\n          >\r\n            <span className='navbar-toggler-icon' />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    //Binding each individual methods below to this constructor\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  //changes above state, on every change\r\n  //without this, the form fields cannot be changed\r\n  onChange(e) {\r\n    //BELOW: would be the long way; you'd have to do this for every field/input\r\n    //this.setState({ projectName: e.target.value });\r\n\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className='project'>\r\n          <div className='container'>\r\n            <div className='row'>\r\n              <div className='col-md-8 m-auto'>\r\n                <h5 className='display-4 text-center'>Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className='form-group'>\r\n                    <input\r\n                      type='text'\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder='Project Name'\r\n                      name='projectName'\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className='invalid-feedback'>\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <input\r\n                      type='text'\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder='Unique Project ID'\r\n                      name='projectIdentifier'\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className='invalid-feedback'>\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className='form-group'>\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder='Project Description'\r\n                      name='description'\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    {errors.description && (\r\n                      <div className='invalid-feedback'>\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className='form-group'>\r\n                    <input\r\n                      type='date'\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.start_date\r\n                      })}\r\n                      name='start_date'\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.start_date && (\r\n                      <div className='invalid-feedback'>\r\n                        {errors.start_date}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className='form-group'>\r\n                    <input\r\n                      type='date'\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.end_date\r\n                      })}\r\n                      name='end_date'\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.end_date && (\r\n                      <div className='invalid-feedback'>{errors.end_date}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <input\r\n                    type='submit'\r\n                    className='btn btn-primary btn-block mt-4'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//An object\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//STEP 2: create the reducer\r\n//info is then send to the index.js, in the 'reducers' folder\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initalState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initalState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\n//This file is the 'root' reducers\r\n//STEP 3: The invididual reducers must be listed below\r\n//THEN:a method must be created in the 'projectActions.js', in the 'actions' folder\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //Populates update form\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className='register'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-md-8 m-auto'>\r\n              <h5 className='display-4 text-center'>Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder='Project Name'\r\n                    name='projectName'\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className='invalid-feedback'>{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    placeholder='Unique Project ID'\r\n                    name='projectIdentifier'\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className='invalid-feedback'>\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder='Project Description'\r\n                    name='description'\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className='invalid-feedback'>{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='date'\r\n                    className='form-control form-control-lg'\r\n                    name='start_date'\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='date'\r\n                    className='form-control form-control-lg'\r\n                    name='end_date'\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type='submit'\r\n                  className='btn btn-primary btn-block mt-4'\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, projectTask_id) {\r\n    this.props.deleteProjectTask(backlog_id, projectTask_id);\r\n  }\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className='card mb-1 bg-light'>\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className='card-body bg-light'>\r\n          <h5 className='card-title'>{project_task.summary}</h5>\r\n          <p className='card-text text-truncate '>\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className='btn btn-primary'\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className='btn btn-danger ml-4'\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  projectTask_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${projectTask_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  projectTask_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(\r\n      `/api/backlog/${backlog_id}/${projectTask_id}`,\r\n      project_task\r\n    );\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (\r\n  backlog_id,\r\n  projectTask_id\r\n) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting Project Task: '${projectTask_id}', this action cannot be undone.`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${projectTask_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: projectTask_id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      //console.log(tasks[i]);\r\n\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-md-4'>\r\n            <div className='card text-center mb-2'>\r\n              <div className='card-header bg-secondary text-white'>\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              //insert tasks here\r\n            }\r\n          </div>\r\n          <div className='col-md-4'>\r\n            <div className='card text-center mb-2'>\r\n              <div className='card-header bg-primary text-white'>\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className='col-md-4'>\r\n            <div className='card text-center mb-2'>\r\n              <div className='card-header bg-success text-white'>\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className='alert alert-danger text-center' role='alert'>\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className='alert alert-danger text-center' role='alert'>\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className='alert alert-info text-center' role='alert'>\r\n              No Project Tasks on board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks}></Backlog>;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className='container'>\r\n        <Link to={`/addProjectTask/${id}`} className='btn btn-primary mb-3'>\r\n          <i className='fas fa-plus-circle'> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n\r\n    //Binding each individual methods below to this constructor\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks - required for validations\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className='add-PBI'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-md-8 m-auto'>\r\n              {\r\n                //REMINDER: All 'Link' mappings are defined in 'App.js', which is like a controller in Java\r\n              }\r\n              <Link to={`/projectBoard/${id}`} className='btn btn-light'>\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className='display-4 text-center'>\r\n                Add /Update Project Task\r\n              </h4>\r\n              <p className='lead text-center'>Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name='summary'\r\n                    placeholder='Project Task summary'\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className='invalid-feedback'>{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <textarea\r\n                    className='form-control form-control-lg'\r\n                    placeholder='Acceptance Criteria'\r\n                    name='acceptanceCriteria'\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='date'\r\n                    className='form-control form-control-lg'\r\n                    name='dueDate'\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <select\r\n                    className='form-control form-control-lg'\r\n                    name='priority'\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                  <select\r\n                    className='form-control form-control-lg'\r\n                    name='status'\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=''>Select Status</option>\r\n                    <option value='TO_DO'>TO DO</option>\r\n                    <option value='IN_PROGRESS'>IN PROGRESS</option>\r\n                    <option value='DONE'>DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type='submit'\r\n                  className='btn btn-primary btn-block mt-4'\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//An object\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      created_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_At\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, projectTask_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, projectTask_id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      created_At: this.state.created_At\r\n    };\r\n\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className='add-PBI'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-md-8 m-auto'>\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className='btn btn-light'\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className='display-4 text-center'>Update Project Task</h4>\r\n              <p className='lead text-center'>\r\n                Project Name: {this.state.projectIdentifier} || Project Task ID:\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name='summary'\r\n                    placeholder='Project Task summary'\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className='invalid-feedback'>{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <textarea\r\n                    className='form-control form-control-lg'\r\n                    placeholder='Acceptance Criteria'\r\n                    name='acceptanceCriteria'\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='date'\r\n                    className='form-control form-control-lg'\r\n                    name='dueDate'\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <select\r\n                    className='form-control form-control-lg'\r\n                    name='priority'\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                  <select\r\n                    className='form-control form-control-lg'\r\n                    name='status'\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=''>Select Status</option>\r\n                    <option value='TO_DO'>TO DO</option>\r\n                    <option value='IN_PROGRESS'>IN PROGRESS</option>\r\n                    <option value='DONE'>DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type='submit'\r\n                  className='btn btn-primary btn-block mt-4'\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='landing'>\r\n        <div className='light-overlay landing-inner text-dark'>\r\n          <div className='container'>\r\n            <div className='row'>\r\n              <div className='col-md-12 text-center'>\r\n                <h1 className='display-3 mb-4'>\r\n                  Personal Project Management (PPM) Tool\r\n                </h1>\r\n                <p className='lead'>\r\n                  Create your account to join active projects or start you own\r\n                </p>\r\n                <hr />\r\n                <Link to='/register' className='btn btn-lg btn-primary mr-2'>\r\n                  Sign Up\r\n                </Link>\r\n                <Link to='/login' className='btn btn-lg btn-secondary mr-2'>\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className='register'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-md-8 m-auto'>\r\n              <h1 className='display-4 text-center'>Sign Up</h1>\r\n              <p className='lead text-center'>Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder='Full Name'\r\n                    name='fullName'\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className='invalid-feedback'>{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder='Email Address (Username)'\r\n                    name='username'\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className='invalid-feedback'>{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='password'\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className='invalid-feedback'>{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='password'\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder='Confirm Password'\r\n                    name='confirmPassword'\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className='invalid-feedback'>\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type='submit' className='btn btn-info btn-block mt-4' />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    //the 'login' below is from 'securityActions.js'\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className='login'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-md-8 m-auto'>\r\n              <h1 className='display-4 text-center'>Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder='Email Address (Username)'\r\n                    name='username'\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className='invalid-feedback'>{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className='form-group'>\r\n                  <input\r\n                    type='password'\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className='invalid-feedback'>{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type='submit' className='btn btn-info btn-block mt-4' />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  //Below are from 'index.js' in the 'reducers' folder\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to='/login' />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\n//Information taken from OTHER components\n//This file sends info to 'index.js', which then sends info to 'index.html'\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  //Prevent token from going away everytime you refresh\n  //Take token from local storage, and puts it back in our state (every time)\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className='App'>\n          <Header></Header>\n\n          {\n            //Public Routes\n          }\n\n          <Route exact path='/' component={Landing}></Route>\n          <Route exact path='/register' component={Register}></Route>\n          <Route exact path='/login' component={Login}></Route>\n\n          {\n            //Private Routes\n          }\n          <Switch>\n            <SecuredRoute exact path='/dashboard' component={Dashboard} />\n            <SecuredRoute exact path='/addProject' component={AddProject} />\n            <SecuredRoute\n              exact\n              path='/updateProject/:id'\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path='/projectBoard/:id'\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path='/addProjectTask/:id'\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path='/updateProjectTask/:backlog_id/:pt_id'\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n//Information is taken from 'App.js'\n//This file sends info to 'index.html'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}